<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="3" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-11T09:07:39 EST" name="Default suite" finished-at="2025-01-11T09:08:39 EST" duration-ms="59346">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CreateLeadRunner@31190526]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-01-11T09:07:39 EST" name="Default test" finished-at="2025-01-11T09:08:39 EST" duration-ms="59346">
      <class name="runner.CreateLeadRunner">
        <test-method is-config="true" signature="startReport()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:07:39 EST" name="startReport" finished-at="2025-01-11T09:07:39 EST" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method is-config="true" signature="set()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:07:39 EST" name="set" finished-at="2025-01-11T09:07:39 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:07:39 EST" name="setUpClass" finished-at="2025-01-11T09:07:39 EST" duration-ms="127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6568f998]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="reportDetails()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:07:39 EST" name="reportDetails" finished-at="2025-01-11T09:07:39 EST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDetails -->
        <test-method is-config="true" signature="preConditions()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:07:40 EST" name="preConditions" finished-at="2025-01-11T09:07:43 EST" duration-ms="3239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preConditions -->
        <test-method is-config="true" signature="setNode()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:07:43 EST" name="setNode" finished-at="2025-01-11T09:07:43 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setNode -->
        <test-method is-config="true" signature="setup()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:07:43 EST" name="setup" finished-at="2025-01-11T09:07:51 EST" duration-ms="7530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="runCreateAccount(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:07:51 EST" name="runCreateAccount" data-provider="ExcelData" finished-at="2025-01-11T09:08:01 EST" duration-ms="10231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rayaan]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mumbai]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Low]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runCreateAccount -->
        <test-method is-config="true" signature="postConditions()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:08:01 EST" name="postConditions" finished-at="2025-01-11T09:08:01 EST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postConditions -->
        <test-method is-config="true" signature="preConditions()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:08:01 EST" name="preConditions" finished-at="2025-01-11T09:08:03 EST" duration-ms="1669" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preConditions -->
        <test-method is-config="true" signature="setNode()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:08:03 EST" name="setNode" finished-at="2025-01-11T09:08:03 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setNode -->
        <test-method is-config="true" signature="setup()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:08:03 EST" name="setup" finished-at="2025-01-11T09:08:10 EST" duration-ms="6744" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="runCreateAccount(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:08:10 EST" name="runCreateAccount" data-provider="ExcelData" finished-at="2025-01-11T09:08:20 EST" duration-ms="10032" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Yashika]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chennai]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Medium]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runCreateAccount -->
        <test-method is-config="true" signature="postConditions()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:08:20 EST" name="postConditions" finished-at="2025-01-11T09:08:20 EST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postConditions -->
        <test-method is-config="true" signature="preConditions()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:08:20 EST" name="preConditions" finished-at="2025-01-11T09:08:21 EST" duration-ms="1559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preConditions -->
        <test-method is-config="true" signature="setup()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:08:21 EST" name="setup" finished-at="2025-01-11T09:08:29 EST" duration-ms="7656" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setNode()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:08:21 EST" name="setNode" finished-at="2025-01-11T09:08:21 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setNode -->
        <test-method signature="runCreateAccount(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:08:29 EST" name="runCreateAccount" data-provider="ExcelData" finished-at="2025-01-11T09:08:38 EST" duration-ms="9443" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Arjun]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pune]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[High]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runCreateAccount -->
        <test-method is-config="true" signature="postConditions()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:08:38 EST" name="postConditions" finished-at="2025-01-11T09:08:39 EST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postConditions -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:08:39 EST" name="tearDownClass" finished-at="2025-01-11T09:08:39 EST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="stopReport()[pri:0, instance:runner.CreateLeadRunner@31190526]" started-at="2025-01-11T09:08:39 EST" name="stopReport" finished-at="2025-01-11T09:08:39 EST" duration-ms="329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopReport -->
      </class> <!-- runner.CreateLeadRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
